0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

제한 사항
numbers의 길이는 1 이상 100,000 이하입니다.
numbers의 원소는 0 이상 1,000 이하입니다.
정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Solution {
    public String solution(int[] numbers) {
        Comparator<String> numberComparator = new Comparator<>() {
            @Override
            public int compare(String num1, String num2){
                // return -((num1+num2).compareTo(num2+num1));
                List<Character> list1 = putNumber(num1);
                List<Character> list2 = putNumber(num2);
                int index = 0;
                while(true){
                    if(index >= list1.size() + list2.size()){
                        return 1;
                    }
                    char n1 = list1.get(index % list1.size());
                    char n2 = list2.get(index % list2.size());
                    if(n1 != n2){
                        return -(n1-n2);
                    }
                    index++;
                }
            }
        };
        PriorityQueue<String> pq = new PriorityQueue<>(numberComparator);
        for(int i=0; i<numbers.length; i++){
            pq.offer(numbers[i] + "");
        }
        StringBuilder sb = new StringBuilder();
        while(!pq.isEmpty()){
            sb.append(pq.poll());
        }
        String answer = sb.toString();
        if(answer.charAt(0) == '0'){
            return "0";
        }
        return answer;
    }
    
    
    public List<Character> putNumber(String number){
        List<Character> list = new ArrayList<>();
        for(int i=0; i<number.length(); i++){
            list.add(number.charAt(i));
        }
        return list;
    }
}
