JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다.
단, 첫 문자가 알파벳이 아닐 때에는 이어지는 알파벳은 소문자로 쓰면 됩니다. (첫 번째 입출력 예 참고)
문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.

제한 조건
s는 길이 1 이상 200 이하인 문자열입니다.
s는 알파벳과 숫자, 공백문자(" ")로 이루어져 있습니다.
숫자는 단어의 첫 문자로만 나옵니다.
숫자로만 이루어진 단어는 없습니다.
공백문자가 연속해서 나올 수 있습니다.
----------------------------------------------------------------------------------------------------
import java.util.*;
class Solution {
    public String solution(String s) {
        String answer = "";
        
        // String test = " aa bb cc dd ee ff gg hh ii jj  kkk ";
        // String[] testArray = test.split(" ",0);
        // String[] testArray2 = test.split(" ", -1);
        // System.out.println(Arrays.toString(testArray));
        // System.out.println(Arrays.toString(testArray2));
        // " Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj  Kkk  "
        
        
        
        String[] array = s.split(" ", -1);
        for(int i=0; i<array.length; i++){
            array[i] = array[i].toLowerCase();
            
            if(array[i].length() > 0){
                String first = Character.toString(array[i].charAt(0));
                if(array[i].charAt(0) >= 'a' && array[i].charAt(0) <= 'z'){
                    array[i] = first.toUpperCase() + array[i].substring(1);
                }
                answer += array[i];
                answer += " ";
            } else {
                answer += " ";
            }
        }
        answer = answer.substring(0, answer.length()-1);
        return answer;
    }
}
